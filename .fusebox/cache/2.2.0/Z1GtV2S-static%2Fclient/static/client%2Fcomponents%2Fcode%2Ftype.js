module.exports = { contents: "\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1(hljs) {\n    var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n    var TYPE_IDENT_RE = IDENT_RE + '(\\\\s*<\\\\s*' + IDENT_RE + '\\\\s*>\\\\s*)?';\n    var KEYWORDS = {\n        keyword: 'in of if for while finally var new function do return void else break catch ' +\n            'instanceof with throw case default try this switch continue typeof delete ' +\n            'let yield const export super debugger as async await static abstract get set ' +\n            // ECMAScript 6 modules import\n            'import from as public private protected implements enum',\n        literal: 'true false null undefined NaN Infinity',\n        built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n            'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n            'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n            'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n            'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n            'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n            'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n            'Promise any string number boolean'\n    };\n    var TITLE = {\n        className: 'minor-title',\n        begin: '[A-Za-z$_][0-9A-Za-z$_]*',\n        relevance: 0\n    };\n    var PARAMS_CONTAINS = [\n        hljs.APOS_STRING_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.C_LINE_COMMENT_MODE,\n        TITLE\n    ];\n    return {\n        keywords: KEYWORDS,\n        contains: [\n            {\n                className: 'type-returns',\n                begin: /(->)/,\n                relevance: 10\n            },\n            {\n                className: 'function',\n                begin: TYPE_IDENT_RE + '\\\\s*\\\\(', end: /\\)\\s*({|=>)/,\n                returnBegin: true,\n                excludeEnd: true,\n                relevance: 0,\n                keywords: KEYWORDS,\n                contains: [\n                    __assign({}, TITLE, { className: 'title' }),\n                    {\n                        className: 'params',\n                        begin: /\\(/, end: /\\)/,\n                        excludeBegin: true,\n                        excludeEnd: true,\n                        endsParent: true,\n                        keywords: KEYWORDS,\n                        relevance: 0,\n                        contains: PARAMS_CONTAINS\n                    },\n                    hljs.C_LINE_COMMENT_MODE,\n                    hljs.C_BLOCK_COMMENT_MODE\n                ]\n            },\n        ]\n    };\n}\nexports.default = default_1;\n",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1498383688000,
devLibsRequired : undefined
};